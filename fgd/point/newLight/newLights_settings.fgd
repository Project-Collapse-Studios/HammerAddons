@PointClass base(BaseEntityPoint) appliesto(MESA) 
= newLights_settings : "newLight_light_settings"
[
	TargetNewLightEntity(target_destination) : "TargetNewLightEntity_Name" : "" : "Target Light Entity name"
	TransitionTime(integer) : "TransitionTime" : 0 : "TransitionTime in secs ( 0 for instant ) to transition into new settings. Its a lerp operation A + (B-A)*TimeFactor"
	
	LightType[engine](integer) : "LightType" : 0
	LightType(Choices) : "LightType" : 0 =
	[
		0 : "Point Light"
		1 : "Spot Light"
	]
	
	Enabled(boolean) : "Enabled" : 1 : "Light Enabled or Disabled"
	
	LightColorAmbient(color255) : "Light Ambient Color" : "0 0 0 0" : "This is the ambient color of the light."
	LightColor(color255) : "Light Color" : "255 255 255 1" : "This is the color of the light."
	
	style[engine](integer) : "Appearance" : 0
	style(Choices) : "Appearance" : 0 = #snippet LightStyle
	
	Intensity(float) : "Light Intensity" : 8000 : "RGB * Intensity"
	SpecMultiplier(float) : "SpecularMultiplier" : 1 : "0 to 1 RGB * Intensity * SpecularMultiplier"	
	Range(float) : "Range" : 1000 : "Range"	
	
	falloffQuadratic(float) : "falloffQuadratic" : 0 : "falloffQuadratic"
	falloffLinear(float) : "falloffLinear" : 0 : "falloffLinear"
	falloffConstant(float) : "falloffConstant" : 1 : "falloffConstant"
	
	phi(float) : "OuterAngle" : 60 : "OuterAngle"
	theta(float) : "InnerAngle" : 30 : "InnerAngle"
	angularFallOff(float) : "AngularFallOff" : 2 : "AngularFallOff"
	
	////Inputs
	input InputApplySettings(void) : "InputApplySettings Trigger to apply settings"
]

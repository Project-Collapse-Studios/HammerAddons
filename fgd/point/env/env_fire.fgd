@PointClass base(BaseEntityPoint, EnableDisable) 
	iconsprite("editor/env_fire")
	color(200 200 0)
	sphere(firesize)
= env_fire: "An entity that handles a single flame at its origin. " +
	"The flame causes heat 'damage' to other env_fire entities around it, and will eventually ignite non-flaming env_fire entities nearby, " +
	"causing the fire to spread."
	[
	health(integer) : "Duration" : 30 : "Amount of time the fire will burn."

	firesize(integer) : "Size" : 64 : "Height (in world units) of the flame. Unless this game supports classic sprite-based fire, only the following ranges produce visually distinct results: "+
	"tiny (< 36), small (36-71), medium (72-107), large (anything else). The hitbox is still affected directly."

	// Old default was 4, this better matches how the particle fire looks
	fireattack(integer) : "Attack" : 1 : "Amount of time the fire takes to grow to full strength. Unless this game supports classic sprite-based fire, this will only affect the hitbox."

	firetype[engine](integer) : "Type" : 0
	// Plasma mode doesn't work, there is code for it though
	firetype[complete](choices) : "Type" : 0 =
		[
		0: "Natural"
		1: "Plasma"
		]

	spawnflags(flags)  =
		[
		1: "Infinite Duration" : 0
		2: "Smokeless" : 0
		4: "Start On" : 0
		8: "Start Full" : 0
		16: "Don't drop" : 0
		32: "No glow" : 0
		128: "Delete when out" : 0
		// Only affects classic fire, may as well limit to HL2 only
		256: "Visible from above (classic fire only)" : 0 [HL2]
		256: "No sound" : 0 [ASW]
		512: "No ignite sound" : 0 [ASW]
		1024: "No fuelling once lit" : 0 [ASW]
		2048: "Fast burn think" : 0 [ASW]
		]

	ignitionpoint(float) : "Ignition Point" : 32 : "Amount of heat 'damage' to take before this flame should ignite."
	damagescale(float) : "Damage Scale" : "1.0" : "Multiplier of the burn damage done by the flame."
	lightradiusscale[ASW](float) : "Light Radius Scale" : "1.0" : "Multiplier for the glow radius."
	lightbrightness[ASW](integer) : "Light Brightness" : 1 : "Integer exponent for the glow brightness."
	lightcolor[ASW](color255) : "Light Color" : "255 255 255" : "R G B 0-255 values describing the color of the dynamic light for this fire."
	loopsound[ASW](sound) : "Loop sound" : "d1_town.LargeFireLoop" : "Looping sound to play while this fire is burning."
	ignitesound[ASW](sound) : "Ignite sound" : "ASW_Flare.IgniteFlare" : "One shot sound to play when the fire starts."

	// Inputs
	input StartFire(void) : "Start the fire."
	input Extinguish(float) : "Puts out the fire permanently in the number of seconds specified."
	input ExtinguishTemporary(float) : "Puts out the fire temporarily in the number of seconds specified."

	// Outputs
	output OnIgnited(void) : "Fires when the fire is first ignited."
	output OnExtinguished(void) : "Fires when the fire is fully extinguished."

	@resources
		[
		sound "Fire.Plasma"
		func env_fire // Depending on options, different particles might be included.
		]
	]
